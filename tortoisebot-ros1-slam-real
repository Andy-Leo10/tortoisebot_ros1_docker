# This Docker image will contain everything necessaary 
# for starting the mapping system for the real robot

# Start from Ubuntu 20.04 base image
FROM ubuntu:20.04

# Minimal setup
RUN apt-get update \
    && apt-get install -y locales lsb-release gnupg
ARG DEBIAN_FRONTEND=noninteractive
RUN dpkg-reconfigure locales

# Install ROS 1 Noetic
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
RUN apt-get update \
    && apt-get install -y --no-install-recommends ros-noetic-desktop-full
RUN apt-get install -y --no-install-recommends python3-rosdep
RUN rosdep init \
    && rosdep fix-permissions \
    && rosdep update
RUN echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc

# Install Git
RUN apt-get update && apt-get install -y git && apt-get install -y build-essential
# Install catkin tools
RUN apt-get update && apt-get install -y python3-catkin-tools

# Install necessary packages
RUN apt-get update && apt-get install -y \
    git \
    build-essential \
    python3-catkin-tools \
    ros-noetic-v4l2-camera \
    ros-noetic-rqt-image-view \
    ros-noetic-xacro \
    ros-noetic-urdf \
    ros-noetic-joint-state-publisher \
    ros-noetic-robot-state-publisher \
    ros-noetic-gmapping \
    ros-noetic-rosbridge-server \
    ros-noetic-web-video-server \
    ros-noetic-amcl \
    ros-noetic-map-server \
    ros-noetic-move-base \
    ros-noetic-navigation \
    ros-noetic-slam-gmapping \
    ros-noetic-dwa-local-planner \
    # ros-noetic-joint-state-publisher-gui \
    ros-noetic-teleop-twist-keyboard

# Create an overlay Catkin workspace
RUN /bin/bash -c "source /opt/ros/noetic/setup.bash \
    && mkdir -p /catkin_ws/src \
    && cd /catkin_ws \
    && git clone -b noetic https://github.com/rigbetellabs/tortoisebot.git"
# Build the workspace
RUN /bin/bash -c "source /opt/ros/noetic/setup.bash \
    && cd /catkin_ws \
    && catkin build -j1 \
    && source /catkin_ws/devel/setup.bash \
    && echo 'source /catkin_ws/devel/setup.bash' >> ~/.bashrc"
# Set up the work directory and entrypoint
WORKDIR /catkin_ws
